{
	"info": {
		"_postman_id": "ee0465d7-9aa2-4c09-8c01-11755a139e0d",
		"name": "InstaCook",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Get All Recipes",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{base_url}}/recipes",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"recipes"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create New Recipe",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var json_data = pm.response.json();\r",
							"pm.collectionVariables.set(\"recipe_id\", json_data.id);\r",
							"console.log(json_data)\r",
							"console.log(json_data.id)\r",
							"pm.test(\"Status code is 201\", function () {\r",
							"    pm.response.to.have.status(201);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\": \"Vegetable Biryani\",\r\n    \"description\": \"This is best Vegetable Biryani\",\r\n    \"num_of_servings\": 10,\r\n    \"directions\": \"follow some thing\",\r\n    \"cook_time\": 60\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{base_url}}/recipes",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"recipes"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create New Recipe Validation Errors Missing Name",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 400\", function () {\r",
							"    pm.response.to.have.status(400);\r",
							"});\r",
							"\r",
							"pm.test(\"Validation error\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.error.name[0]).to.eql('Missing data for required field.');\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"description\": \"This is best Vegetable Biryani\",\r\n    \"num_of_servings\": 10,\r\n    \"directions\": \"follow some thing\",\r\n    \"cook_time\": 60\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{base_url}}/recipes",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"recipes"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create New Recipe Validation Errors Invalid num_of_serving",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 400\", function () {\r",
							"    pm.response.to.have.status(400);\r",
							"});\r",
							"\r",
							"pm.test(\"Validation error for number of servings\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.error.num_of_servings[0]).to.eql(\"Number of servings must be greater than 0.\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\": \"Vegetable Biryani\",\r\n    \"description\": \"This is best Vegetable Biryani\",\r\n    \"num_of_servings\": 0,\r\n    \"directions\": \"follow some thing\",\r\n    \"cook_time\": 60\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{base_url}}/recipes",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"recipes"
					]
				}
			},
			"response": []
		},
		{
			"name": "Publish Recipe",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 204\", function () {\r",
							"    pm.response.to.have.status(204);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"url": {
					"raw": "{{base_url}}/recipes/{{recipe_id}}/publish",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"recipes",
						"{{recipe_id}}",
						"publish"
					]
				}
			},
			"response": []
		},
		{
			"name": "UnPublish Recipe",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 204\", function () {\r",
							"    pm.response.to.have.status(204);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{base_url}}/recipes/{{recipe_id}}/publish",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"recipes",
						"{{recipe_id}}",
						"publish"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Specific Recipe",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{base_url}}/recipes/{{recipe_id}}",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"recipes",
						"{{recipe_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Update Recipe",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\": \"Vegetable Biryani\",\r\n    \"description\": \"This is best Vegetable Biryani\",\r\n    \"num_of_servings\": 20,\r\n    \"directions\": \"This is how you make it\",\r\n    \"cook_time\": 60\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{base_url}}/recipes/{{recipe_id}}",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"recipes",
						"{{recipe_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete the Recipe",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 204\", function () {\r",
							"    pm.response.to.have.status(204);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{base_url}}/recipes/{{recipe_id}}",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"recipes",
						"{{recipe_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Non Existing Recipe",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 404\", function () {\r",
							"    pm.response.to.have.status(404);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{base_url}}/recipes/99999",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"recipes",
						"99999"
					]
				}
			},
			"response": []
		},
		{
			"name": "Update Non Existing Recipe",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 404\", function () {\r",
							"    pm.response.to.have.status(404);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\": \"Vegetable Biryani\",\r\n    \"description\": \"This is best Vegetable Biryani\",\r\n    \"num_of_servings\": 4,\r\n    \"directions\": \"follow some thing\",\r\n    \"cook_time\": 60\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{base_url}}/recipes/99999",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"recipes",
						"99999"
					]
				}
			},
			"response": []
		},
		{
			"name": "Publish Non Existing Recipe",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 404\", function () {\r",
							"    pm.response.to.have.status(404);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"url": {
					"raw": "{{base_url}}/recipes/99999/publish",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"recipes",
						"99999",
						"publish"
					]
				}
			},
			"response": []
		},
		{
			"name": "Un Publish Non Existing Recipe",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 404\", function () {\r",
							"    pm.response.to.have.status(404);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{base_url}}/recipes/99999/publish",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"recipes",
						"99999",
						"publish"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete Non Existing Recipe",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 404\", function () {\r",
							"    pm.response.to.have.status(404);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{base_url}}/recipes/99999",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"recipes",
						"99999"
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "base_url",
			"value": "http://localhost:5000"
		},
		{
			"key": "recipe_id",
			"value": "1"
		}
	]
}